apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.learngradle"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode project.hasProperty("VERSION_CODE") ? (VERSION_CODE as int) : (DEF_VERSION_CODE as int)
        versionName project.hasProperty("VERSION_NAME") ? VERSION_NAME : DEF_VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        //测试环境
        neibu {
            dimension 'default'
            // com.example.learngradle.neibu
            applicationIdSuffix '.neibu'
        }

        //线上环境
        online {
            //线上环境的applicatonId是：com.example.learngradle
            dimension 'default'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def buildTypeName = variant.buildType.name
                def flavorName = variant.productFlavors[0].name
                def buildTime = new Date().format("yyyy-MM-dd-HH-mm-ss")
                def fileName = "learn_${flavorName}_${defaultConfig.versionName}_${defaultConfig.versionCode}_${buildTime}_${buildTypeName}.apk"
                output.outputFileName = fileName
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
